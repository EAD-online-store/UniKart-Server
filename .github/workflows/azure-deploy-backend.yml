name: Deploy Backend App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
      PORT: ${{ secrets.PORT }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      SECRET_KEY_ACCESS_TOKEN: ${{ secrets.SECRET_KEY_ACCESS_TOKEN }}
      SECRET_KEY_REFRESH_TOKEN: ${{ secrets.SECRET_KEY_REFRESH_TOKEN }}
      EMAIL: ${{ secrets.EMAIL }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      CLODINARY_API_SECRET_KEY: ${{ secrets.CLODINARY_API_SECRET_KEY }}
      CLODINARY_API_KEY: ${{ secrets.CLODINARY_API_KEY }}
      CLODINARY_CLOUD_NAME: ${{ secrets.CLODINARY_CLOUD_NAME }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: unikart.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: unikart.azurecr.io/unikart-backend-app:latest
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            EMAIL=${{ secrets.EMAIL }}
            EMAIL_PASS=${{ secrets.EMAIL_PASS }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            CLODINARY_API_SECRET_KEY=${{ secrets.CLODINARY_API_SECRET_KEY }}
            CLODINARY_API_KEY=${{ secrets.CLODINARY_API_KEY }}
            CLODINARY_CLOUD_NAME=${{ secrets.CLODINARY_CLOUD_NAME }}
            MONGODB_URI=${{ secrets.MONGODB_URI}}
